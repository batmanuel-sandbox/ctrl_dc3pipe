#<?cfg paf policy ?> 
# 
# DC3a Alert Production image processing pipeline including image subtraction
# and source detection
#

# executionMode: oneloop
localLogMode: true
eventBrokerHost: "lsst8.ncsa.uiuc.edu"

# receiving an event with this topic name will shut down the pipeline
shutdownTopic: shutdownImageSubtractionDetection

##
# Stage configuration

# Transform slice id into amp, CCD, and other identifiers
appStage: {
   stageName: "lsst.ctrl.dc3pipe.SliceInfoStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sliceInfo_policy.paf"
}

# Link input files into input directory
appStage: {
   stageName: "lsst.pex.harness.SymLinkStage"
   eventTopic: "None"
   stagePolicy: "IPSD/symLink_policy.paf"
}

# Load input image (exposure 0)
appStage: {
   stageName: "lsst.pex.harness.IOStage.InputStage"
   eventTopic: "triggerImageprocEvent0"
   stagePolicy: "IPSD/imageInput0_policy.paf"
}

# Transform input event into visit metadata (exposure 0)
appStage: {
   stageName: "lsst.ctrl.dc3pipe.VisitMetadataStage"
   eventTopic: "None"
   stagePoliicy: "IPSD/visitMetadata0_policy.paf"
}

# Transform image metadata into LSST standard (exposure 0)
appStage: {
   stageName: "lsst.ctrl.dc3pipe.TransformMetadataStage"
   eventTopic: "None"
   stagePolicy: "IPSD/transformMetadata0_policy.paf"
}

# Validate that metadata is in LSST standard form (exposure 0)
appStage: {
   stageName: "lsst.ctrl.dc3pipe.ValidateMetadataStage"
   eventTopic: "None"
   stagePolicy: "IPSD/validateMetadata0_policy.paf"
}

# Persist the per-visit and per-exposure metadata and the raw image (exposure 0)
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/rawImageAndMetadataOutput0_policy.paf"
}

# Determine which calibration data products to load
appStage: {
   stageName: "lsst.ip.isr.IdentifyCalibrationProductsStage"
   eventTopic: "None"
   stagePolicy: "IPSD/identifyCalibrationProducts_policy.paf"
}

# Load the calibration data products
appStage: {
   stageName: "lsst.pex.harness.IOStage.InputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/calibrationInput_policy.paf"
}

# Perform ISR (exposure 0)
appStage: {
   stageName: "lsst.ip.isr.IsrStage"
   eventTopic: "None"
   stagePolicy: "IPSD/isr0_policy.paf"
}

# Detect sources for WCS (exposure 0)
appStage: {
   stageName: "lsst.meas.pipeline.SourceDetectionStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sourceDetection0_policy.paf"
}

# Measure sources for WCS (exposure 0)
appStage: {
   stageName: "lsst.meas.pipeline.SourceMeasurementStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sourceMasurement0_policy.paf"
}

# Determine PSF (exposure 0)
appStage: {
   stageName: "lsst.meas.pipeline.PsfDeterminationStage"
   eventTopic: "None"
   stagePolicy: "IPSD/psfDetermination0_policy.paf"
}

# Persist WCS sources and PSF (exposure 0)
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/wcsSourcesAndPsfOutput0_policy.paf"
}

# Load input image (exposure 1)
appStage: {
   stageName: "lsst.pex.harness.IOStage.InputStage"
   eventTopic: "triggerImageprocEvent1"
   stagePolicy: "IPSD/imageInput1_policy.paf"
}

# Transform input event into visit metadata (exposure 1)
appStage: {
   stageName: "lsst.ctrl.dc3pipe.VisitMetadataStage"
   eventTopic: "None"
   stagePoliicy: "IPSD/visitMetadata1_policy.paf"
}

# Transform image metadata into LSST standard (exposure 1)
appStage: {
   stageName: "lsst.ctrl.dc3pipe.TransformMetadataStage"
   eventTopic: "None"
   stagePolicy: "IPSD/transformMetadata1_policy.paf"
}

# Validate that metadata is in LSST standard form (exposure 1)
appStage: {
   stageName: "lsst.ctrl.dc3pipe.ValidateMetadataStage"
   eventTopic: "None"
   stagePolicy: "IPSD/validateMetadata1_policy.paf"
}

# Persist the per-visit and per-exposure metadata and the raw image (exposure 1)
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/rawImageAndMetadataOutput1_policy.paf"
}

# Perform ISR (exposure 1)
appStage: {
   stageName: "lsst.ip.isr.IsrStage"
   eventTopic: "None"
   stagePolicy: "IPSD/isr1_policy.paf"
}

# Detect sources for WCS (exposure 1)
appStage: {
   stageName: "lsst.meas.pipeline.SourceDetectionStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sourceDetection1_policy.paf"
}

# Measure sources for WCS (exposure 1)
appStage: {
   stageName: "lsst.meas.pipeline.SourceMeasurementStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sourceMasurement1_policy.paf"
}

# Determine PSF (exposure 1)
appStage: {
   stageName: "lsst.meas.pipeline.PsfDeterminationStage"
   eventTopic: "None"
   stagePolicy: "IPSD/psfDetermination1_policy.paf"
}

# Persist WCS sources and PSF (exposure 1)
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/wcsSourcesAndPsfOutput1_policy.paf"
}

# Load WCS sources from entire CCD
appStage: {
   stageName: "lsst.pex.harness.IOStage.InputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/wcsSourcesInput_policy.paf"
}

# Determine WCS based on CCD's WCS sources
appStage: {
   stageName: "lsst.meas.pipeline.WcsDeterminationStage"
   eventTopic: "None"
   stagePolicy: "IPSD/wcsDetermination_policy.paf"
}

# Persist calibrated science exposures
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/calibratedExposuresOutput_policy.paf"
}

# Load WCS from template image
appStage: {
   stageName: "lsst.pex.harness.IOStage.InputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/templateMetadataInput_policy.paf"
}

# Determine bounding box of exposures within template image
appStage: {
   stageName: "lsst.meas.pipeline.TemplateBboxStage"
   eventTopic: "None"
   stagePolicy: "IPSD/templateBbox_policy.paf"
}

# Load subimage of template corresponding to exposure
appStage: {
   stageName: "lsst.pex.harness.IOStage.InputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/templateSubimageInput_policy.paf"
}

# Subtract template from exposure (exposure 0)
appStage: {
   stageName: "lsst.ip.diffim.ImageDifferenceStage"
   eventTopic: "None"
   stagePolicy: "IPSD/imageDifference0_policy.paf"
}

# Subtract template from exposure (exposure 1)
appStage: {
   stageName: "lsst.ip.diffim.ImageDifferenceStage"
   eventTopic: "None"
   stagePolicy: "IPSD/imageDifference1_policy.paf"
}

# Persist difference images and kernels
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/differenceImageAndKernelOutput_policy.paf"
}

# Co-add difference images and detect DIASources
appStage: {
   stageName: "lsst.meas.pipeline.AddAndDetectStage"
   eventTopic: "None"
   stagePolicy: "IPSD/addAndDetect_policy.paf"
}

# Measure DIASources in both exposures
appStage: {
   stageName: "lsst.meas.pipeline.SourceMeasurementStage"
   eventTopic: "None"
   stagePolicy: "IPSD/diaSourceMasurement_policy.paf"
}

# Classify DIASources
appStage: {
   stageName: "lsst.meas.pipeline.SourceClassificationStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sourceClassification_policy.paf"
}

# Persist DIASources
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/diaSourceOutput_policy.paf"
}

# Persist SDQA ratings
appStage: {
   stageName: "lsst.pex.harness.IOStage.OutputStage"
   eventTopic: "None"
   stagePolicy: "IPSD/sdqaOutput_policy.paf"
}

# Send an event to the association pipeline indicating that
# new detections are available
appStage: {
   stageName: "lsst.pex.harness.EventStage.EventStage"
   eventTopic: "None"
   stagePolicy: "IPSD/associationEvent_policy.paf"
}
